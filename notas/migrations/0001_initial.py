# Generated by Django 5.2.1 on 2025-06-12 21:07

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaConocimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Área')),
            ],
            options={
                'verbose_name': 'Área de Conocimiento',
                'verbose_name_plural': 'Áreas de Conocimiento',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=150, verbose_name='Nombres')),
                ('primer_apellido', models.CharField(max_length=150, verbose_name='Primer Apellido')),
                ('segundo_apellido', models.CharField(blank=True, max_length=150, null=True, verbose_name='Segundo Apellido')),
                ('especialidad', models.CharField(blank=True, max_length=100, null=True, verbose_name='Especialidad')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario de Login')),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre del Curso')),
                ('director_grado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cursos_dirigidos', to='notas.docente', verbose_name='Director de Grado')),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=150, verbose_name='Nombres del Estudiante')),
                ('primer_apellido', models.CharField(max_length=150, verbose_name='Primer Apellido')),
                ('segundo_apellido', models.CharField(blank=True, max_length=150, null=True, verbose_name='Segundo Apellido')),
                ('lugar_nacimiento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lugar de Nacimiento')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('numero_documento', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Número de Documento')),
                ('lugar_expedicion_documento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lugar de Expedición')),
                ('celular_estudiante', models.CharField(blank=True, max_length=20, null=True, verbose_name='Celular del Estudiante')),
                ('direccion_residencia', models.CharField(blank=True, max_length=250, null=True, verbose_name='Dirección de Residencia')),
                ('eps', models.CharField(blank=True, max_length=100, null=True, verbose_name='E.P.S')),
                ('grupo_sanguineo', models.CharField(blank=True, choices=[('O', 'O'), ('A', 'A'), ('B', 'B'), ('AB', 'AB')], max_length=2, null=True, verbose_name='Grupo Sanguíneo')),
                ('rh', models.CharField(blank=True, choices=[('+', '+'), ('-', '-')], max_length=1, null=True, verbose_name='RH')),
                ('enfermedades_alergias', models.TextField(blank=True, null=True, verbose_name='Enfermedades o Alergias')),
                ('correo_electronico_contacto', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo de Contacto del Acudiente')),
                ('espera_en_porteria', models.BooleanField(default=False, verbose_name='¿Debe esperar en portería?')),
                ('colegio_anterior', models.CharField(blank=True, max_length=200, null=True, verbose_name='Colegio Anterior')),
                ('grado_anterior', models.CharField(blank=True, max_length=20, null=True, verbose_name='Grado Cursado Anteriormente')),
                ('nombre_acudiente', models.CharField(max_length=200, verbose_name='Acudiente Principal')),
                ('telefono_acudiente', models.CharField(max_length=20, verbose_name='Teléfono del Acudiente')),
                ('nombre_padre', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre del Padre')),
                ('celular_padre', models.CharField(blank=True, max_length=20, null=True, verbose_name='Celular del Padre')),
                ('documento_padre', models.CharField(blank=True, max_length=20, null=True, verbose_name='Documento del Padre')),
                ('nombre_madre', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre de la Madre')),
                ('celular_madre', models.CharField(blank=True, max_length=20, null=True, verbose_name='Celular de la Madre')),
                ('documento_madre', models.CharField(blank=True, max_length=20, null=True, verbose_name='Documento de la Madre')),
                ('compromiso_padre_familia', models.TextField(blank=True, null=True, verbose_name='Compromiso del Padre/Acudiente')),
                ('compromiso_estudiante', models.TextField(blank=True, null=True, verbose_name='Compromiso del Estudiante')),
                ('curso', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notas.curso', verbose_name='Curso Asignado')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario de Login')),
            ],
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre de la Materia')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materias', to='notas.areaconocimiento', verbose_name='Área de Conocimiento')),
            ],
            options={
                'ordering': ['area__nombre', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='AsignacionDocente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensidad_horaria_semanal', models.PositiveSmallIntegerField(default=0, verbose_name='Intensidad Horaria Semanal (IH)')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.curso', verbose_name='Curso Asignado')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.docente', verbose_name='Docente Asignado')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.materia', verbose_name='Materia Asignada')),
            ],
            options={
                'verbose_name': 'Asignación Académica',
                'verbose_name_plural': 'Asignaciones Académicas',
                'unique_together': {('docente', 'materia', 'curso')},
            },
        ),
        migrations.CreateModel(
            name='PeriodoAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('Primer Periodo', 'Primer Periodo'), ('Segundo Periodo', 'Segundo Periodo'), ('Tercer Periodo', 'Tercer Periodo'), ('Cuarto Periodo', 'Cuarto Periodo'), ('Final', 'Final')], max_length=50, verbose_name='Nombre del Periodo')),
                ('ano_lectivo', models.IntegerField(default=2025, verbose_name='Año Lectivo')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fecha de Fin')),
                ('esta_activo', models.BooleanField(default=False, verbose_name='¿Periodo activo para calificar?')),
            ],
            options={
                'verbose_name': 'Periodo Académico',
                'verbose_name_plural': 'Periodos Académicos',
                'unique_together': {('nombre', 'ano_lectivo')},
            },
        ),
        migrations.CreateModel(
            name='Observacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_observacion', models.CharField(choices=[('ACADEMICA', 'Académica'), ('CONVIVENCIA', 'Convivencia'), ('AUTOMATICA', 'Automática')], default='ACADEMICA', max_length=15)),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('fecha_reporte', models.DateTimeField(auto_now_add=True)),
                ('asignacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notas.asignaciondocente', verbose_name='Contexto (Clase)')),
                ('docente_reporta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='notas.docente', verbose_name='Docente que reporta')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante', verbose_name='Estudiante')),
                ('periodo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico', verbose_name='Periodo Académico Asociado')),
            ],
            options={
                'verbose_name': 'Observación del Estudiante',
                'verbose_name_plural': 'Observaciones del Estudiante',
                'ordering': ['-fecha_reporte'],
            },
        ),
        migrations.CreateModel(
            name='IndicadorLogroPeriodo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(verbose_name='Descripción del Indicador/Logro')),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente', verbose_name='Asignación Académica')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico', verbose_name='Periodo Académico')),
            ],
        ),
        migrations.CreateModel(
            name='Calificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_nota', models.CharField(choices=[('SER', 'Ser'), ('SABER', 'Saber'), ('HACER', 'Hacer'), ('REC', 'Recuperación'), ('PROM_PERIODO', 'Promedio Periodo')], default='HACER', max_length=15)),
                ('valor_nota', models.DecimalField(decimal_places=1, max_digits=2, verbose_name='Valor de la Nota (1.0 - 5.0)')),
                ('es_recuperada', models.BooleanField(default=False, verbose_name='¿Es nota recuperada?')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.docente', verbose_name='Docente que califica')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante', verbose_name='Estudiante')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.materia', verbose_name='Materia')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico', verbose_name='Periodo Académico')),
            ],
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=datetime.date.today, verbose_name='Fecha de Asistencia')),
                ('estado', models.CharField(choices=[('P', 'Presente'), ('A', 'Ausente'), ('T', 'Tarde')], default='P', max_length=1, verbose_name='Estado')),
                ('justificada', models.BooleanField(default=False, verbose_name='¿Inasistencia Justificada?')),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente', verbose_name='Asignación')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Registro de Asistencia',
                'verbose_name_plural': 'Registros de Asistencia',
                'ordering': ['-fecha', 'asignacion__curso__nombre', 'estudiante__primer_apellido'],
                'unique_together': {('estudiante', 'asignacion', 'fecha')},
            },
        ),
        migrations.CreateModel(
            name='InasistenciasManualesPeriodo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=0, verbose_name='Cantidad de Inasistencias')),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico')),
            ],
            options={
                'verbose_name': 'Inasistencia Manual por Periodo',
                'verbose_name_plural': 'Inasistencias Manuales por Periodo',
                'unique_together': {('estudiante', 'asignacion', 'periodo')},
            },
        ),
        migrations.CreateModel(
            name='PlanDeMejoramiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion_plan', models.TextField(verbose_name='Actividades del Plan')),
                ('nota_recuperacion', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('fecha_limite', models.DateField(blank=True, null=True)),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
                ('periodo_recuperado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico')),
            ],
            options={
                'verbose_name': 'Plan de Mejoramiento (Nivelación)',
                'verbose_name_plural': 'Planes de Mejoramiento (Nivelaciones)',
                'unique_together': {('estudiante', 'asignacion', 'periodo_recuperado')},
            },
        ),
        migrations.CreateModel(
            name='ReporteParcial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presenta_dificultades', models.BooleanField(default=False, verbose_name='¿Presenta Dificultades?')),
                ('observacion_adicional', models.TextField(blank=True, null=True, verbose_name='Observación Adicional')),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente', verbose_name='Asignación Académica')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante', verbose_name='Estudiante')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico', verbose_name='Periodo Académico')),
            ],
            options={
                'verbose_name': 'Reporte Parcial de Periodo',
                'verbose_name_plural': 'Reportes Parciales de Periodo',
                'unique_together': {('estudiante', 'asignacion', 'periodo')},
            },
        ),
    ]
