# Generated by Django 5.2.1 on 2025-07-14 21:46

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Docente',
                'verbose_name_plural': 'Docentes',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='¿Estudiante Activo?')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='Colegio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True, verbose_name='Nombre del Colegio')),
                ('slug', models.SlugField(blank=True, help_text='Identificador para la URL (se genera automáticamente)', max_length=255, unique=True)),
                ('domain', models.CharField(blank=True, help_text='Ej: integradoapr.edu.co', max_length=255, null=True, unique=True, verbose_name='Dominio Personalizado')),
                ('nit', models.CharField(blank=True, max_length=50, verbose_name='NIT del Colegio')),
                ('resolucion_aprobacion', models.CharField(blank=True, max_length=255, verbose_name='Resolución de Aprobación')),
                ('direccion', models.CharField(blank=True, max_length=255, verbose_name='Dirección Física')),
                ('lema', models.CharField(blank=True, max_length=255, null=True, verbose_name='Lema o Slogan')),
                ('historia', models.TextField(blank=True, null=True, verbose_name='Historia / Quiénes Somos')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos_colegios/', verbose_name='Logo Principal (PNG transparente recomendado)')),
                ('logo_secundario', models.ImageField(blank=True, null=True, upload_to='logos_colegios/', verbose_name='Logo Secundario (ej. Gobernación)')),
                ('favicon', models.ImageField(blank=True, help_text='Icono para la pestaña del navegador (32x32px)', null=True, upload_to='logos_colegios/')),
                ('escudo', models.ImageField(blank=True, help_text='Escudo para usar como marca de agua en PDFs', null=True, upload_to='logos_colegios/')),
                ('color_primario', models.CharField(default='#923E2B', max_length=7, verbose_name='Color Primario (Botones, Encabezados)')),
                ('color_secundario', models.CharField(default='#4F4F4F', max_length=7, verbose_name='Color Secundario (Acentos)')),
                ('color_texto_primario', models.CharField(default='#FFFFFF', help_text='Color del texto sobre el color primario (ej. en botones)', max_length=7)),
                ('color_fondo', models.CharField(default='#F8F9FA', help_text='Color de fondo general de las páginas', max_length=7)),
                ('telefono', models.CharField(blank=True, max_length=50, verbose_name='Teléfono Principal')),
                ('email_contacto', models.EmailField(blank=True, max_length=255, verbose_name='Email de Contacto')),
                ('whatsapp_numero', models.CharField(blank=True, help_text='Incluir código de país, ej: 573001234567', max_length=20, verbose_name='Número de WhatsApp')),
                ('url_facebook', models.URLField(blank=True, max_length=255, verbose_name='URL de Facebook')),
                ('url_instagram', models.URLField(blank=True, max_length=255, verbose_name='URL de Instagram')),
                ('url_twitter_x', models.URLField(blank=True, max_length=255, verbose_name='URL de Twitter / X')),
                ('url_youtube', models.URLField(blank=True, max_length=255, verbose_name='URL de YouTube')),
                ('portal_publico_activo', models.BooleanField(default=True, verbose_name='¿Portal Público Activo?')),
                ('admin_general', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='colegios_administrados', to=settings.AUTH_USER_MODEL, verbose_name='Administrador Principal')),
            ],
            options={
                'verbose_name': 'Colegio',
                'verbose_name_plural': 'Colegios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='AreaConocimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del Área')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='areas_conocimiento', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Área de Conocimiento',
                'verbose_name_plural': 'Áreas de Conocimiento',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionCalificaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docente_puede_modificar', models.BooleanField(default=False, verbose_name='Permitir que los docentes modifiquen los porcentajes de calificación')),
                ('colegio', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configuracion_calificaciones', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Configuración de Permisos de Calificación',
                'verbose_name_plural': 'Configuración de Permisos de Calificación',
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_materias_reprobadas', models.PositiveSmallIntegerField(default=2, verbose_name='Máximo de materias reprobadas para ser promovido')),
                ('colegio', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='configuracion', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Configuración del Sistema',
                'verbose_name_plural': 'Configuraciones del Sistema',
            },
        ),
        migrations.CreateModel(
            name='FichaDocente',
            fields=[
                ('docente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='ficha', serialize=False, to='notas.docente')),
                ('numero_documento', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Número de Documento')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono de Contacto')),
                ('direccion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dirección de Residencia')),
                ('titulo_profesional', models.CharField(blank=True, max_length=200, null=True, verbose_name='Título Profesional')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_docentes/', verbose_name='Foto del Docente')),
            ],
            options={
                'verbose_name': 'Ficha del Docente',
                'verbose_name_plural': 'Fichas de Docentes',
            },
        ),
        migrations.AddField(
            model_name='docente',
            name='colegio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='docentes', to='notas.colegio'),
        ),
        migrations.AddField(
            model_name='docente',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario de Login'),
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del Curso')),
                ('colegio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cursos', to='notas.colegio')),
                ('director_grado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cursos_dirigidos', to='notas.docente', verbose_name='Director de Grado')),
            ],
            options={
                'verbose_name': 'Curso',
                'verbose_name_plural': 'Cursos',
                'ordering': ['nombre'],
                'unique_together': {('nombre', 'colegio')},
            },
        ),
        migrations.CreateModel(
            name='DocumentoPublico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título del Documento')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción Breve')),
                ('archivo', models.FileField(upload_to='documentos_publicos/', verbose_name='Archivo (PDF, Word, etc.)')),
                ('fecha_publicacion', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de Publicación')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documentos_publicos', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Documento Público',
                'verbose_name_plural': 'Documentos Públicos',
                'ordering': ['-fecha_publicacion'],
            },
        ),
        migrations.CreateModel(
            name='FichaEstudiante',
            fields=[
                ('estudiante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='ficha', serialize=False, to='notas.estudiante')),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('TI', 'Tarjeta de Identidad'), ('RC', 'Registro Civil'), ('CE', 'Cédula de Extranjería'), ('OT', 'Otro')], default='TI', max_length=2, verbose_name='Tipo de Documento')),
                ('numero_documento', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Número de Documento')),
                ('lugar_nacimiento', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('eps', models.CharField(blank=True, max_length=100, null=True, verbose_name='EPS')),
                ('grupo_sanguineo', models.CharField(blank=True, choices=[('O+', 'O+'), ('O-', 'O-'), ('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True, verbose_name='Grupo Sanguíneo y RH')),
                ('enfermedades_alergias', models.TextField(blank=True, null=True, verbose_name='Enfermedades o Alergias')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_estudiantes/', verbose_name='Foto del Estudiante')),
                ('nombre_padre', models.CharField(blank=True, max_length=200, null=True)),
                ('celular_padre', models.CharField(blank=True, max_length=20, null=True)),
                ('nombre_madre', models.CharField(blank=True, max_length=200, null=True)),
                ('celular_madre', models.CharField(blank=True, max_length=20, null=True)),
                ('nombre_acudiente', models.CharField(blank=True, max_length=200, null=True)),
                ('celular_acudiente', models.CharField(blank=True, max_length=20, null=True)),
                ('email_acudiente', models.EmailField(blank=True, max_length=254, null=True)),
                ('espera_en_porteria', models.BooleanField(default=False)),
                ('colegio_anterior', models.CharField(blank=True, max_length=200, null=True)),
                ('grado_anterior', models.CharField(blank=True, max_length=20, null=True)),
                ('compromiso_padre', models.TextField(blank=True, null=True, verbose_name='Compromiso del Padre/Acudiente')),
                ('compromiso_estudiante', models.TextField(blank=True, null=True, verbose_name='Compromiso del Estudiante')),
            ],
        ),
        migrations.AddField(
            model_name='estudiante',
            name='colegio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estudiantes', to='notas.colegio'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='curso',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notas.curso', verbose_name='Curso Asignado'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario de Login'),
        ),
        migrations.CreateModel(
            name='FotoGaleria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Un título o descripción corta.', max_length=150, verbose_name='Título de la Foto')),
                ('imagen', models.ImageField(upload_to='galeria_portal/', verbose_name='Fotografía')),
                ('fecha_subida', models.DateTimeField(default=django.utils.timezone.now)),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fotos_galeria', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Foto de la Galería',
                'verbose_name_plural': 'Fotos de la Galería',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='ImagenCarrusel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=100)),
                ('subtitulo', models.CharField(blank=True, max_length=200)),
                ('imagen', models.ImageField(upload_to='carrusel_portal/', verbose_name='Imagen de fondo')),
                ('orden', models.PositiveIntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='imagenes_carrusel', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Imagen del Carrusel',
                'verbose_name_plural': 'Imágenes del Carrusel',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la Materia')),
                ('abreviatura', models.CharField(blank=True, max_length=10, null=True, verbose_name='Abreviatura')),
                ('usar_ponderacion_equitativa', models.BooleanField(default=True, verbose_name='Usar ponderación equitativa por defecto')),
                ('porcentaje_ser', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje SER por defecto')),
                ('porcentaje_saber', models.PositiveIntegerField(default=40, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje SABER por defecto')),
                ('porcentaje_hacer', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje HACER por defecto')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materias', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
                'ordering': ['nombre'],
                'unique_together': {('nombre', 'colegio')},
            },
        ),
        migrations.CreateModel(
            name='Calificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_nota', models.CharField(choices=[('SER', 'Promedio Ser'), ('SABER', 'Promedio Saber'), ('HACER', 'Promedio Hacer'), ('PROM_PERIODO', 'Promedio del Periodo')], max_length=12)),
                ('valor_nota', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('1.0')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calificaciones', to='notas.colegio')),
                ('docente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='notas.docente')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.materia')),
            ],
            options={
                'verbose_name': 'Calificación (Promedio)',
                'verbose_name_plural': 'Calificaciones (Promedios)',
            },
        ),
        migrations.CreateModel(
            name='AsignacionDocente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intensidad_horaria_semanal', models.PositiveSmallIntegerField(default=0, verbose_name='Intensidad Horaria (IH)')),
                ('usar_ponderacion_equitativa', models.BooleanField(default=True, verbose_name='Usar ponderación equitativa')),
                ('porcentaje_ser', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('porcentaje_saber', models.PositiveIntegerField(default=40, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('porcentaje_hacer', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones_docentes', to='notas.colegio')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.curso', verbose_name='Curso')),
                ('docente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.docente', verbose_name='Docente')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.materia', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Asignación Académica',
                'verbose_name_plural': 'Asignaciones Académicas',
                'ordering': ['curso__nombre', 'materia__nombre'],
                'unique_together': {('docente', 'materia', 'curso', 'colegio')},
            },
        ),
        migrations.CreateModel(
            name='Mensaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asunto', models.CharField(max_length=200, verbose_name='Asunto')),
                ('cuerpo', models.TextField(verbose_name='Cuerpo del Mensaje')),
                ('fecha_envio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Envío')),
                ('leido', models.BooleanField(default=False, verbose_name='¿Leído?')),
                ('estado', models.CharField(choices=[('ENVIADO', 'Enviado'), ('BORRADOR', 'Borrador')], default='ENVIADO', max_length=10, verbose_name='Estado del Mensaje')),
                ('eliminado_por_remitente', models.BooleanField(default=False)),
                ('eliminado_por_destinatario', models.BooleanField(default=False)),
                ('fecha_eliminacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Eliminación')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mensajes', to='notas.colegio')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_recibidos', to=settings.AUTH_USER_MODEL, verbose_name='Destinatario')),
                ('remitente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_enviados', to=settings.AUTH_USER_MODEL, verbose_name='Remitente')),
            ],
            options={
                'verbose_name': 'Mensaje',
                'verbose_name_plural': 'Mensajes',
                'ordering': ['-fecha_envio'],
            },
        ),
        migrations.CreateModel(
            name='NotaDetallada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.CharField(help_text="Descripción de la nota (ej: 'Examen 1', 'Taller en clase')", max_length=100)),
                ('valor_nota', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('1.0')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('calificacion_promedio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_detalladas', to='notas.calificacion')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notas_detalladas', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Nota Detallada',
                'verbose_name_plural': 'Notas Detalladas',
            },
        ),
        migrations.CreateModel(
            name='Noticia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Titular de la Noticia')),
                ('resumen', models.CharField(max_length=500, verbose_name='Resumen Corto')),
                ('cuerpo', models.TextField(verbose_name='Contenido Completo de la Noticia')),
                ('imagen_portada', models.ImageField(blank=True, null=True, upload_to='noticias_portal/', verbose_name='Imagen de Portada')),
                ('fecha_publicacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('estado', models.CharField(choices=[('BORRADOR', 'Borrador'), ('PUBLICADO', 'Publicado')], default='BORRADOR', max_length=10)),
                ('autor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='noticias', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Noticia',
                'verbose_name_plural': 'Noticias',
                'ordering': ['-fecha_publicacion'],
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensaje', models.CharField(max_length=255)),
                ('leido', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('tipo', models.CharField(choices=[('MENSAJE', 'Nuevo Mensaje'), ('OBSERVADOR', 'Observación Registrada'), ('PERIODO', 'Cambio en Periodo'), ('RENDIMIENTO', 'Alerta de Rendimiento'), ('GENERAL', 'Aviso General')], default='GENERAL', max_length=15)),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to='notas.colegio')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='PeriodoAcademico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('PRIMERO', 'Primer Periodo'), ('SEGUNDO', 'Segundo Periodo'), ('TERCERO', 'Tercer Periodo'), ('CUARTO', 'Cuarto Periodo')], max_length=20)),
                ('ano_lectivo', models.PositiveIntegerField(default=2025)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('esta_activo', models.BooleanField(default=True, verbose_name='Ingreso de Notas Activo')),
                ('reporte_parcial_activo', models.BooleanField(default=True, verbose_name='Reporte Parcial Activo')),
                ('nivelaciones_activas', models.BooleanField(default=False, verbose_name='Nivelaciones Activas')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='periodos_academicos', to='notas.colegio')),
            ],
            options={
                'verbose_name': 'Periodo Académico',
                'verbose_name_plural': 'Periodos Académicos',
                'ordering': ['-ano_lectivo', 'fecha_inicio'],
                'unique_together': {('nombre', 'ano_lectivo', 'colegio')},
            },
        ),
        migrations.CreateModel(
            name='Observacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_observacion', models.CharField(choices=[('ACADEMICA', 'Académica'), ('CONVIVENCIA', 'Convivencia'), ('AUTOMATICA', 'Automática')], default='ACADEMICA', max_length=15)),
                ('descripcion', models.TextField()),
                ('fecha_reporte', models.DateTimeField(auto_now_add=True)),
                ('asignacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notas.asignaciondocente')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observaciones', to='notas.colegio')),
                ('docente_reporta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='notas.docente')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
                ('periodo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico')),
            ],
            options={
                'verbose_name': 'Observación del Estudiante',
                'verbose_name_plural': 'Observaciones del Estudiante',
                'ordering': ['-fecha_reporte'],
            },
        ),
        migrations.CreateModel(
            name='IndicadorLogroPeriodo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicadores_logro', to='notas.colegio')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico')),
            ],
        ),
        migrations.AddField(
            model_name='calificacion',
            name='periodo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico'),
        ),
        migrations.CreateModel(
            name='PonderacionAreaMateria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peso_porcentual', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Peso Porcentual (%)')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.areaconocimiento')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ponderaciones', to='notas.colegio')),
                ('materia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.materia')),
            ],
            options={
                'verbose_name': 'Ponderación de Materia en Área',
                'verbose_name_plural': 'Ponderaciones de Materias en Áreas',
                'unique_together': {('area', 'materia', 'colegio')},
            },
        ),
        migrations.AddField(
            model_name='areaconocimiento',
            name='materias',
            field=models.ManyToManyField(related_name='areas_ponderadas', through='notas.PonderacionAreaMateria', to='notas.materia'),
        ),
        migrations.CreateModel(
            name='PublicacionBoletin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_publicacion', models.DateTimeField(auto_now_add=True)),
                ('esta_visible', models.BooleanField(default=False, verbose_name='¿Visible para Estudiantes?')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publicaciones_boletines', to='notas.colegio')),
                ('periodo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico', verbose_name='Periodo Publicado')),
                ('publicado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Publicado por')),
            ],
            options={
                'verbose_name': 'Publicación de Boletín de Periodo',
                'verbose_name_plural': 'Publicaciones de Boletines de Periodo',
                'ordering': ['-periodo__ano_lectivo', '-periodo__fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='PublicacionBoletinFinal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano_lectivo', models.PositiveIntegerField(unique=True, verbose_name='Año Lectivo Publicado')),
                ('fecha_publicacion', models.DateTimeField(auto_now_add=True)),
                ('esta_visible', models.BooleanField(default=False, verbose_name='¿Visible para Estudiantes?')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publicaciones_finales', to='notas.colegio')),
                ('publicado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Publicado por')),
            ],
            options={
                'verbose_name': 'Publicación de Boletín Final',
                'verbose_name_plural': 'Publicaciones de Boletines Finales',
                'ordering': ['-ano_lectivo'],
            },
        ),
        migrations.CreateModel(
            name='RegistroObservador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_suceso', models.DateField(verbose_name='Fecha del Suceso')),
                ('tipo', models.CharField(choices=[('ACADEMICA', 'Académica'), ('COMPORTAMENTAL', 'Comportamental')], max_length=15)),
                ('subtipo', models.CharField(blank=True, choices=[('POSITIVA', 'Positiva'), ('NEGATIVA', 'A Mejorar')], help_text='Solo para observaciones de comportamiento', max_length=10, null=True)),
                ('descripcion', models.TextField(verbose_name='Descripción del Suceso (Docente)')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('descargo_estudiante', models.TextField(blank=True, null=True, verbose_name='Descargo del Estudiante')),
                ('fecha_descargo', models.DateTimeField(blank=True, null=True)),
                ('notificado_a_estudiante', models.BooleanField(default=False)),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registros_observador', to='notas.colegio')),
                ('docente_reporta', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observaciones_hechas', to='notas.docente')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_observador', to='notas.estudiante')),
            ],
            options={
                'verbose_name': 'Registro del Observador',
                'verbose_name_plural': 'Registros del Observador',
                'ordering': ['-fecha_suceso'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='docente',
            unique_together={('user', 'colegio')},
        ),
        migrations.AlterUniqueTogether(
            name='estudiante',
            unique_together={('user', 'colegio')},
        ),
        migrations.CreateModel(
            name='Asistencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(default=datetime.date.today)),
                ('estado', models.CharField(choices=[('P', 'Presente'), ('A', 'Ausente'), ('T', 'Tarde')], default='P', max_length=1)),
                ('justificada', models.BooleanField(default=False)),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='notas.colegio')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
            ],
            options={
                'verbose_name': 'Registro de Asistencia',
                'verbose_name_plural': 'Registros de Asistencia',
                'ordering': ['-fecha', 'estudiante__user__last_name'],
                'unique_together': {('estudiante', 'asignacion', 'fecha', 'colegio')},
            },
        ),
        migrations.CreateModel(
            name='InasistenciasManualesPeriodo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=0)),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inasistencias_manuales', to='notas.colegio')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico')),
            ],
            options={
                'verbose_name': 'Inasistencia Manual por Periodo',
                'verbose_name_plural': 'Inasistencias Manuales por Periodo',
                'unique_together': {('estudiante', 'asignacion', 'periodo', 'colegio')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='calificacion',
            unique_together={('estudiante', 'materia', 'periodo', 'tipo_nota', 'colegio')},
        ),
        migrations.CreateModel(
            name='PlanDeMejoramiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion_plan', models.TextField()),
                ('nota_recuperacion', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('finalizado_por_admin', models.BooleanField(default=False, help_text='Marcar si la nota ya fue actualizada por el administrador.')),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planes_mejoramiento', to='notas.colegio')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
                ('periodo_recuperado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico')),
            ],
            options={
                'verbose_name': 'Plan de Mejoramiento',
                'verbose_name_plural': 'Planes de Mejoramiento',
                'unique_together': {('estudiante', 'asignacion', 'periodo_recuperado', 'colegio')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='areaconocimiento',
            unique_together={('nombre', 'colegio')},
        ),
        migrations.CreateModel(
            name='ReporteParcial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presenta_dificultades', models.BooleanField(default=False)),
                ('asignacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.asignaciondocente')),
                ('colegio', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportes_parciales', to='notas.colegio')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.estudiante')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notas.periodoacademico')),
            ],
            options={
                'verbose_name': 'Reporte Parcial',
                'verbose_name_plural': 'Reportes Parciales',
                'unique_together': {('estudiante', 'asignacion', 'periodo', 'colegio')},
            },
        ),
    ]
